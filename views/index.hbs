<link rel='stylesheet' href='/css/index.css' />
<script src="//momentjs.com/downloads/moment-with-locales.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js"></script>
<script src="//momentjs.com/downloads/moment-with-locales.js"></script>
<script src="/js/converter.js"></script>
<script src="/socket.io/socket.io.js"></script>


<title>Inicio</title>
<div class="index">
    <div class="notifications-panel">
        <div class="notifications-button">
            <span>&#9776;</span>
        </div>
        <div class="menu">
            <h1>Notificaciones</h1>
            <div id="notifications" class="notifications">
                
            </div>
        </div>
    </div>
    <div class="publications-menu">
        <div class="upload-publication">      
            <img src="{{avatar}}" alt="">
            <input id="button" type="text" placeholder="¿Qué estás pensando?">
            <div id="modal" class="modal">
                <div class="modal-content">
                    <div class="title">
                        <span class="close">&times;</span>
                        <p>Crear publicación</p>
                    </div>
                    <form class="message" action="/publications/uploadpublication" method="POST" id="upload-form">
                        <textarea name="text" type="text" placeholder="¿Qué estás pensando?"></textarea>
                    </form>
                    <div class="button">
                        <button type="submit" form="upload-form">Publicar</button>
                    </div>
                </div>
            </div>
        </div>
        <div id="publications" class="publications">
            
        </div>
    </div>
    <div class="friends-panel">
        <div class="friends-button">
            <span>&#9776;</span>
        </div>
        <div class="menu">
            <h1>Amigos</h1>
            <div id="friends" class="friends">
                
            </div>
        </div>
    </div>
</div>
<div class="chats">
    <div class="chat">
        <div class="chat-index">
            <img src="{{avatar}}" alt="">
            <a href="#">{{name}}</a>
            <span class="minimize">&minus;</span>
            <span class="close">&times;</span>
        </div>
        <div class="chat-messages">
            tachncak
        </div>
        <div class="chat-options">
            <input id="messageToSend" type="text" placeholder="Enviar mensaje">
        </div>
    </div>
</div>


<script>
    var socket = io();
    var button = document.getElementById("button");
    var modal = document.getElementById("modal");
    var span = document.getElementsByClassName("close")[0];
    var notifications = document.getElementById('notifications')
    var publications = document.getElementById('publications')
    var friends = document.getElementById('friends')

    
    
    var message = document.getElementById('messageToSend');


    button.onclick = function () {
        modal.style.display = "block";
    }
    span.onclick = function () {
        modal.style.display = "none";
    }
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    //este boton de aca corresponde al user-options del navbar. si lo pongo en el main.hbs no funciona, en cambio aca si.
    const buttonToggleUserOptions = document.querySelector('.user-options-button');
    buttonToggleUserOptions.addEventListener('click', function () {
        document.querySelector('.user-options').classList.toggle('active');
    });

    const buttonToggleNotifications = document.querySelector('.notifications-button');
    buttonToggleNotifications.addEventListener('click', function () {
        document.querySelector('.notifications-panel').classList.toggle('active');
    });

    const buttonToggleFriends = document.querySelector('.friends-button');
    buttonToggleFriends.addEventListener('click', function () {
        document.querySelector('.friends-panel').classList.toggle('active');
    });

    $.get("http://localhost:3000/user/getnotifications", data => {
        if (data.status) {
            $.each(data.userNotifications, function () {
                notifications.innerHTML +=
                    '<div class="notification">'+
                       '<div class="notification-info">'+
                           '<div class="user-avatar">'+         
                               '<img src="' + this.from.avatar + '" alt="">'+
                           '</div>'+
                           '<div class="user-info">'+
                               '<p> El usuario ' + this.from.name + ' te ha enviado una solicitud de amistad </p> Hace ' +
                           '</div>'+
                       '</div>'+
                       '<form class="notification-action" action="/user/acceptfriend/' + this._id + '/'+ this.from._id+'" method="POST">'+
                           '<button name="request" value="add" class="add">Añadir amigo</button>'+
                           '<button name="request" value="refuse" class="refuse">Rechazar</button>'+
                       '</form>'+
                   '</div>'
            })
        } else {
            notifications.innerHTML = data.message
        }
    });

    $.get("http://localhost:3000/publications/getallpublications", data => {
        if (data.status) {
            $.each(data.publications, function () {
                console.log(this.user[0].avatar)
                console.log(this.user[0].name)
                publications.innerHTML +=       
                '<div class="publication">'+
                    '<div class="publication-info">'+
                        '<div class="user-avatar">'+
                            '<img src="' + this.user[0].avatar + '" alt="">'+
                        '</div>'+
                        '<div class="user-info">' + this.user[0].name + ' ' + this.user[0].surname + '<br>hace ' + convertDate(this.user[0].createdAt) +
                        '</div>'+
                    '</div>'+
                        '<div class="publication-description">' + this.description +
                    '</div>'+
                '</div>'
            })
        } else {
            publications.innerHTML = data.message
        }
    });

    $.get("http://localhost:3000/user/getalluserfriends", data => {
        if (data.status) {
            $.each(data.friends, function () {
                friends.innerHTML +=       
                   '<div class="friend">'+
                        '<div class="friend-info">'+
                            '<div class="user-avatar">'+
                                '<img src="' + this.avatar + '" alt="">'+
                            '</div>'+
                            '<div class="user-info">' + this.name + ' ' + this.surname +
                            '</div>'+
                        '</div>'+
                    '</div>'
            })
        } else {
            friends.innerHTML = data.message
        }
    });

    //<--------------------------------------------------------------------Socket.io---------------------------------------------------------------------->
    // Envia al server que el usuario se conecto
    socket.emit('connected')
    
    //Si el usuario toca el enter se llama a la función para enviar el mensaje
    message.addEventListener('keypress', function () {
        if (event.keyCode === 13) {
            event.preventDefault();
            sendMessage();
        }
    });

    // Cuando un usuario envia un mensaje, se emite esta accion con el nombre y el mensaje del usuario al servidor
    function sendMessage() {
        if (message.value) {
            socket.emit('message', {
                message: message.value,
                username: username
            });
            message.value = '';
        } else {
            alert("Escribe algo para enviar")
        }
    }

    // Recibe y muestra la conexion de un usuario
    socket.once('userconnect', function (username) {
        messages.innerHTML += '<p>' + username + ' se ha conectado</p>'
    })

    function insertMessages(message) {
        
        messageId = message._id
        console.log(message.message)
        messageContent= message.message
        messages.innerHTML += '<div id="' + messageId +'">'
        messageDiv = document.getElementById(messageId);
        messageDiv.innerHTML += 
            '<div>' +
                '<p>' + message.message + '</p>' +
                '<div id="'+messageId+'"><br></div>' +
            '</div>'
    }

    // Recibe y mustra el historial de mensajes
    socket.on('chathistory', function (messages) {
        $.each(messages, function () {
            insertMessages(this)
        })
        
    })

    // Recibe y muestra la desconexion de un usuario
    socket.on('userdisconnect', function (username) {
        messages.innerHTML += '<p>' + username + ' se ha desconectado</p>'
    })

    // Si el usuario esta escribiendo se le informa al servidor
    message.addEventListener('keypress', function () {
        socket.emit('typing', username)
    });

    // Recibe y muestra cuando el usuario esta escribiendo
    socket.on('typing', function (data) {
        //nadatodavia
    });

    // Recibe y muestra el mensaje del usuario
    socket.on('message', function (data) {
        
        insertMessages(data)
    });
</script>